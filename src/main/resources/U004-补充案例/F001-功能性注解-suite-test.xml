<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd" >

<suite name="suite-功能性注解-1-suit-test">

    <parameter name="id" value="f001-1"></parameter>


    <!--
    实验条件:
    1)test-001、test-002和test-003中均引入T001测试类;
    2)test-002和test-003中均引入功能性注解类 FunctionalAnnotation;
    3)在FunctionalAnnotation类中定义了“各种”@BeforeXXX和@AfterXXX注解方法;
    -->
    <test name="test-001">
        <parameter name="id" value="f001-2"></parameter>
        <classes>
            <class name="top.doublespring.annotation.T001"></class>
        </classes>
    </test>


    <test name="test-002">
        <parameter name="id" value="f001-3"></parameter>
        <classes>
            <class name="top.doublespring.annotation.T001"></class>

            <!--添加功能性注解类-->
            <class name="top.doublespring.annotation.FunctionalAnnotation"></class>
        </classes>
    </test>

    <test name="test-003">
        <parameter name="id" value="f001-4"></parameter>
        <classes>
            <class name="top.doublespring.annotation.T001"></class>

            <!--添加功能性注解类-->
            <class name="top.doublespring.annotation.FunctionalAnnotation"></class>
        </classes>
    </test>


    <!--
    实验结果:
    1)观察到FunctionalAnnotation类中添加的@BeforeSuite、@BeforeTest、@AfterTest、@AfterSuite注解的方法均被调用;
    2)在当前suite作用域内任一待测方法调用前,执行了@BeforeSuite注解的方法;在当前suite作用域内所有待测方法调用后,执行了@AfterSuite注解的方法;
    2)同样,对于引入了 FunctionalAnnotation 注解类的test,在当前test作用域内,任一待测方法调用前,执行了@BeforeTest注解的方法,任一待测方法调用后,执行了@AfterTest注解的方法;
    3)FunctionalAnnotation中的其他@BeforeXXX和@AfterXXX注解方法均没有执行;
    -->

</suite>


