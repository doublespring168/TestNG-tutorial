<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd" >

<suite name="suite-功能性注解-2-class-method">

    <parameter name="id" value="f002-1"></parameter>


    <!--
    实验条件:
    1)test-001和test-002中均引入T002和T001测试类;
    2)test-002中均引入功能性注解类FunctionalAnnotation;
    3)类T002中定义了@BeforeClass()、@AfterClass、@BeforeMethod和@AfterMethod注解方法;
    -->
    <test name="test-001">
        <parameter name="id" value="f002-2"></parameter>
        <classes>
            <class name="top.doublespring.annotation.T002"></class>
            <class name="top.doublespring.annotation.T001"></class>
        </classes>
    </test>


    <test name="test-002">
        <parameter name="id" value="f002-3"></parameter>
        <classes>
            <class name="top.doublespring.annotation.T002"></class>
            <class name="top.doublespring.annotation.T001"></class>

            <!--添加功能性注解类-->
            <class name="top.doublespring.annotation.FunctionalAnnotation"></class>
        </classes>
    </test>


    <!--
    实验结果:
    1)观察到FunctionalAnnotation类中添加的@BeforeSuite、@BeforeTest、@AfterTest、@AfterSuite注解的方法均被调用,其他注解方法均没有执行;
    2)类T002中被注解@BeforeClass、@AfterClass、@BeforeMethod和@AfterMethod修饰的方法,均被多次执行,而T001类中没有定义相关方法,所以没有看到相关日志,
    由此可以得出,@BeforeClass、@AfterClass、@BeforeMethod和@AfterMethod注解使用范围是当前待测测试类;
    3)由于test-001和test-002中均引入了T002类,所以@BeforeClass和@AfterClass均被调用了2次;
    4)由于T002类中有2个方法,可以看到,每次执行这2个方法前后,均会执行@BeforeMethod和@AfterMethod注解的方法;
    -->

</suite>


