<!--<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd" >-->

<suite name="suite-功能性注解-2-class-method">

    <parameter name="id" value="f002-1"></parameter>


    <!--
    实验条件:
    1)test-001和test-002中均引入T002和T001测试类;
    2)test-002中引入功能性注解类FunctionalAnnotation;
    3)类T002中定义了@BeforeClass()、@AfterClass、@BeforeMethod和@AfterMethod注解方法;
    -->
    <test name="test-001">
        <parameter name="id" value="f002-2"></parameter>
        <classes>
            <class name="top.doublespring.annotation.T002"></class>
            <class name="top.doublespring.annotation.T001"></class>
        </classes>
    </test>


    <test name="test-002">
        <parameter name="id" value="f002-3"></parameter>
        <classes>
            <class name="top.doublespring.annotation.T002"></class>
            <class name="top.doublespring.annotation.T001"></class>

            <!--添加功能性注解类-->
            <class name="top.doublespring.annotation.FunctionalAnnotation"></class>
        </classes>
    </test>


    <!--
    实验结果:
    1)test-001和test-002中类T002和T002对比可知,@BeforeClass、@AfterClass、@BeforeMethod和@AfterMethod注解方法仅在当前定义类生效;
    2)@BeforeClass、@AfterClass注解方法在一个类作用域内仅执行一次,而@BeforeMethod和@AfterMethod注解方法,作用域是当前类中每个待测方法;
    3)@BeforeXXX方法执行顺序是:
        @BeforeSuite > @BeforeTest > @BeforeClass > @BeforeGroups > @BeforeMethod
      @AfterXXX方法执行顺序是:
        @AfterMethod > @AfterGroups > @AfterClass > @AfterTest > @AfterSuite
    -->

</suite>


