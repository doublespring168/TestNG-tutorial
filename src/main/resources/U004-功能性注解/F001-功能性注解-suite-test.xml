<!--<!DOCTYPE suite SYSTEM "https://testng.org/testng-1.0.dtd" >-->

<suite name="suite-功能性注解-1-suit-test">

    <parameter name="id" value="f001-1"></parameter>


    <!--
    实验条件:
    1)test-001、test-002和test-003中均引入T001测试类;
    2)test-002和test-003中均引入功能性注解类 FunctionalAnnotation;
    3)在FunctionalAnnotation类中定义了“各种”@BeforeXXX和@AfterXXX注解方法;
    -->
    <test name="test-001">
        <parameter name="id" value="f001-2"></parameter>
        <classes>
            <class name="top.doublespring.annotation.T001"></class>
        </classes>
    </test>


    <test name="test-002">
        <parameter name="id" value="f001-3"></parameter>
        <classes>
            <class name="top.doublespring.annotation.T001"></class>

            <!--添加功能性注解类-->
            <class name="top.doublespring.annotation.FunctionalAnnotation"></class>
        </classes>
    </test>

    <test name="test-003">
        <parameter name="id" value="f001-4"></parameter>
        <classes>
            <class name="top.doublespring.annotation.T001"></class>

            <!--添加功能性注解类-->
            <class name="top.doublespring.annotation.FunctionalAnnotation"></class>
        </classes>
    </test>


    <!--
    实验结果:
    1)test-001、test-002和test-003对比可知,只要当前suite中引入了@BeforeSuite、@AfterSuite注解方法(无论定义在哪个类中),
        则相关方法均会在当前suite之前、之后执行,且@BeforeSuite注解方法入参参数值,是suite内一级parameter子节点定义的变量值,
        而@AfterSuite注解方法入参参数值,是suite内最后一次parameter赋值后的变量值;
    2)test-001和test-002、test-003对比可知,只要当前test引入了@BeforeTest、@AfterTest注解方法(无论定义在哪个类中),则相关方法均会在当前test之前、之后执行;
    3)而FunctionalAnnotation中的其他@BeforeXXX和@AfterXXX注解方法均没有执行;
    -->

</suite>


